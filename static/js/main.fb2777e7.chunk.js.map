{"version":3,"sources":["components/Button/index.jsx","context/SettingsContext.jsx","components/CountdownAnimation/index.jsx","components/SetPomodoro/index.jsx","App.jsx","index.jsx"],"names":["Button","title","activeClass","_callback","className","onClick","SettingsContext","createContext","SettingsContextProvider","props","useState","pomodoro","setPomodoro","executing","setExecuting","startAnimate","setStartAnimate","updateExecute","updatedSettings","setTimerTime","evaluate","active","work","short","long","Provider","value","startTimer","pauseTimer","children","remainingTime","minutes","Math","floor","seconds","SettingsBtn","setCurrentTimer","active_state","stopAnimate","CountdownAnimation","key","timer","animate","useContext","isPlaying","duration","colors","strokeWidth","size","trailColor","onComplete","SetPomodoro","newTimer","setNewTimer","handleChange","input","target","name","parseInt","noValidate","onSubmit","e","preventDefault","type","onChange","App","useEffect","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb2777e7.chunk.js","sourcesContent":["import './styles.css';\r\n\r\nconst Button = ({ title, activeClass, _callback }) => {\r\n  return (\r\n    <button className={activeClass} onClick={_callback}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import { useState, createContext } from 'react';\r\n\r\nexport const SettingsContext = createContext();\r\n\r\nfunction SettingsContextProvider(props) {\r\n  const [pomodoro, setPomodoro] = useState(0);\r\n  const [executing, setExecuting] = useState({});\r\n  const [startAnimate, setStartAnimate] = useState(false);\r\n\r\n  function setCurrentTimer(active_state) {\r\n    updateExecute({\r\n      ...executing,\r\n      active: active_state,\r\n    });\r\n    setTimerTime(executing);\r\n  }\r\n\r\n  // start animation fn\r\n  function startTimer() {\r\n    setStartAnimate(true);\r\n  }\r\n  // pause animation fn\r\n  function pauseTimer() {\r\n    setStartAnimate(false);\r\n  }\r\n  // pass time to counter\r\n  const children = ({ remainingTime }) => {\r\n    const minutes = Math.floor(remainingTime / 60);\r\n    const seconds = remainingTime % 60;\r\n\r\n    if (seconds < 10) {\r\n      return `${minutes}:0${seconds}`;\r\n    } \r\n    return `${minutes}:${seconds}`;\r\n  };\r\n\r\n  // clear session storage\r\n  const SettingsBtn = () => {\r\n    setExecuting({});\r\n    setPomodoro(0);\r\n  };\r\n\r\n  const updateExecute = (updatedSettings) => {\r\n    setExecuting(updatedSettings);\r\n    setTimerTime(updatedSettings);\r\n  };\r\n\r\n  const setTimerTime = (evaluate) => {\r\n    switch (evaluate.active) {\r\n      case 'work':\r\n        setPomodoro(evaluate.work);\r\n        break;\r\n      case 'short':\r\n        setPomodoro(evaluate.short);\r\n        break;\r\n      case 'long':\r\n        setPomodoro(evaluate.long);\r\n        break;\r\n      default:\r\n        setPomodoro(0);\r\n        break;\r\n    }\r\n  };\r\n\r\n  function stopAnimate() {\r\n    setStartAnimate(false);\r\n  }\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        pomodoro,\r\n        executing,\r\n        updateExecute,\r\n        startAnimate,\r\n        startTimer,\r\n        pauseTimer,\r\n        children,\r\n        SettingsBtn,\r\n        setCurrentTimer,\r\n        stopAnimate,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SettingsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default SettingsContextProvider;\r\n","import { useContext } from 'react';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\r\nimport { SettingsContext } from '../../context/SettingsContext';\r\n\r\nconst CountdownAnimation = ({ key, timer, animate, children }) => {\r\n  const { stopAnimate } = useContext(SettingsContext);\r\n\r\n  return (\r\n    <CountdownCircleTimer\r\n      key={key}\r\n      isPlaying={animate}\r\n      duration={timer * 60}\r\n      colors={[\r\n        ['#00ffbf', 0.33],\r\n        ['#00ffbf', 0.33],\r\n        ['#00ffbf', 0.33],\r\n      ]}\r\n      strokeWidth={6}\r\n      size={305}\r\n      trailColor='#ccc'\r\n      onComplete={() => {\r\n        stopAnimate();\r\n      }}\r\n    >\r\n      {children}\r\n    </CountdownCircleTimer>\r\n  );\r\n};\r\n\r\nexport default CountdownAnimation;\r\n","import React, { useContext, useState } from 'react';\r\nimport { SettingsContext } from '../../context/SettingsContext';\r\n\r\nconst SetPomodoro = () => {\r\n  const [newTimer, setNewTimer] = useState({\r\n    work: 30,\r\n    short: 5,\r\n    long: 15,\r\n    active: 'work',\r\n  });\r\n\r\n  const { updateExecute } = useContext(SettingsContext);\r\n\r\n  const handleChange = (input) => {\r\n    const { name, value } = input.target;\r\n    switch (name) {\r\n      case 'work':\r\n        setNewTimer({\r\n          ...newTimer,\r\n          work: parseInt(value),\r\n        });\r\n        break;\r\n      case 'shortBreak':\r\n        setNewTimer({\r\n          ...newTimer,\r\n          short: parseInt(value),\r\n        });\r\n        break;\r\n      case 'longBreak':\r\n        setNewTimer({\r\n          ...newTimer,\r\n          long: parseInt(value),\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateExecute(newTimer);\r\n  };\r\n  return (\r\n    <div className='form-container'>\r\n      <h1>Pomodoro Timer</h1>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className='input-wrapper'>\r\n          <input\r\n            className='input'\r\n            type='number'\r\n            name='work'\r\n            onChange={handleChange}\r\n            value={newTimer.work}\r\n          />\r\n          <input\r\n            className='input'\r\n            type='number'\r\n            name='shortBreak'\r\n            onChange={handleChange}\r\n            value={newTimer.short}\r\n          />\r\n          <input\r\n            className='input'\r\n            type='number'\r\n            name='longBreak'\r\n            onChange={handleChange}\r\n            value={newTimer.long}\r\n          />\r\n        </div>\r\n        <button type='submit'>Pomodoro</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetPomodoro;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport Button from './components/Button';\r\nimport CountdownAnimation from './components/CountdownAnimation';\r\nimport SetPomodoro from './components/SetPomodoro';\r\nimport { SettingsContext } from './context/SettingsContext';\r\n\r\nconst App = () => {\r\n  const {\r\n    pomodoro,\r\n    executing,\r\n    startAnimate,\r\n    children,\r\n    startTimer,\r\n    pauseTimer,\r\n    updateExecute,\r\n    setCurrentTimer,\r\n    SettingsBtn,\r\n  } = useContext(SettingsContext);\r\n\r\n  useEffect(() => {\r\n    updateExecute(executing);\r\n  }, [executing, startAnimate]);\r\n\r\n  return (\r\n    <div className='container'>\r\n      {pomodoro !== 0 ? (\r\n        <>\r\n          <ul className='labels'>\r\n            <li>\r\n              <Button\r\n                title='Work'\r\n                activeClass={\r\n                  executing.active === 'work' ? 'active-label' : undefined\r\n                }\r\n                _callback={() => setCurrentTimer('work')}\r\n              />\r\n            </li>\r\n            <li>\r\n              <Button\r\n                title='Short'\r\n                activeClass={\r\n                  executing.active === 'short' ? 'active-label' : undefined\r\n                }\r\n                _callback={() => setCurrentTimer('short')}\r\n              />\r\n            </li>\r\n            <li>\r\n              <Button\r\n                title='Long'\r\n                activeClass={\r\n                  executing.active === 'long' ? 'active-label' : undefined\r\n                }\r\n                _callback={() => setCurrentTimer('long')}\r\n              />\r\n            </li>\r\n          </ul>\r\n          <Button title='Intervals' _callback={SettingsBtn} />\r\n          <div className='timer-container'>\r\n            <div className='time-wrapper'>\r\n              <CountdownAnimation\r\n                key={pomodoro}\r\n                timer={pomodoro}\r\n                animate={startAnimate}\r\n              >\r\n                {children}\r\n              </CountdownAnimation>\r\n            </div>\r\n          </div>\r\n          <div className='button-wrapper'>\r\n            <Button\r\n              title='Start'\r\n              activeClass={!startAnimate ? 'active' : undefined}\r\n              _callback={startTimer}\r\n            />\r\n            <Button\r\n              title='Pause'\r\n              activeClass={startAnimate ? 'active' : undefined}\r\n              _callback={pauseTimer}\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <SetPomodoro />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport SettingsContextProvider from './context/SettingsContext'\r\n\r\nReactDOM.render(\r\n  <SettingsContextProvider>\r\n    <App />\r\n  </SettingsContextProvider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}